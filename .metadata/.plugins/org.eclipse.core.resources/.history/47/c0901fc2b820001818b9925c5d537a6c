import java.util.ArrayList;

// LEAVE THIS FILE IN THE DEFAULT PACKAGE
//  (i.e., DO NOT add 'package cs311.pa1;' or similar)

// DO NOT MODIFY THE EXISTING METHOD SIGNATURES
//  (you may, however, add member fields and additional methods)

// DO NOT INCLUDE LIBRARIES OUTSIDE OF THE JAVA STANDARD LIBRARY
//  (i.e., you may include java.util.ArrayList etc. here, but not junit, apache commons, google guava, etc.)

/**
* @author Hugh Potter
*/

public class BruteForceSimilarity
{
	// member fields and other member methods
	//private String S1, S2;
	//private int length;
	private ArrayList<String> S = new ArrayList<String>();
	private ArrayList<String> T = new ArrayList<String>();

	public BruteForceSimilarity(String s1, String s2, int sLength)
	{
		//S1 = s1;
		//S2 = s2;
		//length = sLength;
		S = getShingles(s1, sLength);
		T = getShingles(s2, sLength);
		printArrayList(S);
		//printArrayList(T);
	}

	public float lengthOfS1()
	{
		ArrayList<String> checked = new ArrayList<String>();
		int sum = 0;
		int f = 0;
		for (int i = 0; i < S.size(); i++) {
			for (int j = 0; j < S.size(); j++) {
				f = 0;
				if (/*!checked.contains(S.get(i)) &&*/ S.get(i).equals(S.get(j))) {
					f += 1;
				}
			}
			System.out.println(S.get(i) + ": " + f * f);
			if (!checked.contains(S.get(i))) 
				checked.add(S.get(i));
			sum += f * f;
		}
		System.out.println("checked array contains: ");
		printArrayList(checked);
		return (float) Math.sqrt(sum);
	}

	public float lengthOfS2()
	{
		return -1;
	}

	public float similarity()
	{
		return -1;
	}
	
	public ArrayList<String> getShingles(String s, int shinLength) {
		ArrayList<String> shingles = new ArrayList<String>();
		for (int i = 0; i <= s.length() - shinLength; i++)
			shingles.add(s.substring(i, i + shinLength));
		return shingles;
	}
	
	void printArrayList(ArrayList<String> arr) {
		for (int j = 0; j < arr.size(); j++)
			System.out.println(arr.get(j));
	}
	
}